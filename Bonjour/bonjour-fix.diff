diff -EwbNur bonjour-orig/app/project.properties bonjour-fixed/app/project.properties
--- bonjour-orig/app/project.properties	1969-12-31 19:00:00.000000000 -0500
+++ bonjour-fixed/app/project.properties	2014-04-25 20:23:55.000000000 -0400
@@ -0,0 +1,14 @@
+# This file is automatically generated by Android Tools.
+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
+#
+# This file must be checked in Version Control Systems.
+#
+# To customize properties used by the Ant build system edit
+# "ant.properties", and override values to adapt the script to your
+# project structure.
+#
+# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):
+#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
+
+# Project target.
+target=android-19
diff -EwbNur bonjour-orig/app/res/values/strings.xml bonjour-fixed/app/res/values/strings.xml
--- bonjour-orig/app/res/values/strings.xml	2014-04-05 00:42:42.000000000 -0400
+++ bonjour-fixed/app/res/values/strings.xml	2014-04-25 20:23:55.000000000 -0400
@@ -15,7 +15,7 @@
     <string name="title_activity_home_list_layout">HomeListLayoutActivity</string>
     <string name="signup_basic_info">Basic Information</string>
     <string name="signup_upload_icon">Upload User Icon</string>
-    <string name="signup_detail_info">Detail Inforamtion</string>
+    <string name="signup_detail_info">Detail Information</string>
     <string name="action_logout">Logout</string>
     <string name="title_activity_help">HelpActivity</string>
     <string name="drawer_open">drawer_open</string>
diff -EwbNur bonjour-orig/app/src/edu/purdue/cs/hineighbor/APIHandler.java bonjour-fixed/app/src/edu/purdue/cs/hineighbor/APIHandler.java
--- bonjour-orig/app/src/edu/purdue/cs/hineighbor/APIHandler.java	2014-04-18 18:30:04.000000000 -0400
+++ bonjour-fixed/app/src/edu/purdue/cs/hineighbor/APIHandler.java	2014-04-25 20:23:55.000000000 -0400
@@ -3,6 +3,9 @@
 import java.io.BufferedReader;
 import java.io.BufferedWriter;
 import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
@@ -10,6 +13,7 @@
 import java.io.OutputStreamWriter;
 import java.io.UnsupportedEncodingException;
 import java.net.HttpURLConnection;
+import java.net.MalformedURLException;
 import java.net.URL;
 import java.net.URLDecoder;
 import java.net.URLEncoder;
@@ -18,18 +22,19 @@
 import java.util.ArrayList;
 import java.util.HashMap;
 
-
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 import org.json.JSONTokener;
 
-
 import android.content.Context;
 import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
 import android.net.ConnectivityManager;
 import android.net.NetworkInfo;
 import android.os.Bundle;
+import android.util.Log;
+import android.webkit.MimeTypeMap;
 
 /**
  * Bonjour API Handler
@@ -126,7 +131,7 @@
 	 * @param userIcon
 	 * @return userId in the database
 	 */
-	public static long register(Context context, String userName, String password, String retype, boolean gender, int age, Bitmap userIcon ){
+	public static long register(Context context, String userName, String password, String retype, boolean gender, int age, String userIconPath, String hobby){
 		
 		String email = userName;
 		
@@ -134,19 +139,37 @@
 		
 		String regStr = String.format("action=register&username=%s&email=%s&password=%s&retype=%s", userName, email, password, password);
 		regStr = regStr.concat("&age=" + age);
+		regStr = regStr.concat("&hobby=" + hobby);
 		
-		if(userIcon != null){
-			
+		if(userIconPath != null){
 			ByteArrayOutputStream blob = new ByteArrayOutputStream();
-			userIcon.compress(Bitmap.CompressFormat.PNG, 90, blob);
+			File userIconFile = new File(userIconPath);
+			
+			try {
+				if (!MimeTypeMap.getFileExtensionFromUrl(userIconFile.toURI().toURL().toString()).equals("png")) {
+					BitmapFactory.Options opts = new BitmapFactory.Options();
+					opts.inPreferredConfig = Bitmap.Config.ARGB_8888;
+					Bitmap userIcon = BitmapFactory.decodeFile(userIconPath, opts);
+					boolean result = userIcon.compress(Bitmap.CompressFormat.PNG, 90, blob);
+				} else {
+					FileInputStream in = new FileInputStream(userIconFile);
+					int c;
+					while ((c = in.read()) != -1) {
+						blob.write(c);
+					}
+				}
 		
 			byte[] bitmapdata = blob.toByteArray();
 			String avatarBase64 = Base64.encodeBytes(bitmapdata);
 			
-			try {
 				regStr = regStr.concat("&avatar=" + URLEncoder.encode(avatarBase64,"UTF-8"));
+			} catch (MalformedURLException e1) {
+				e1.printStackTrace();
 			} catch (UnsupportedEncodingException e) {
-				// TODO Auto-generated catch block
+				e.printStackTrace();
+			} catch (FileNotFoundException e) {
+				e.printStackTrace();
+			} catch (IOException e) {
 				e.printStackTrace();
 			}
 		}
@@ -168,6 +191,8 @@
 			return userId;
 		}
 		
+		Log.d(LOG_TAG, "register response string: " + responseStr);
+		
 		return -1;
 		
 	}
@@ -410,6 +435,7 @@
 			else
 				return null;
 		}else{
+			Log.d(LOG_TAG, "getUserSecurityQuestion responseStr: " + responseStr);
 			return null;
 		}
     	
@@ -435,6 +461,7 @@
 				bundle.putString(PROCEED_TOKEN, getStringFromJSON(responseStr, PROCEED_TOKEN));
 				return bundle;
 		}else
+			Log.d(LOG_TAG, "verifySecurityAnswer responseStr: " + responseStr);
 				return null;
 		}else{
 			return null;
@@ -538,6 +565,8 @@
     	    	String locationJSON = object.toString();
     	    	String base64LocationString = getBase64String(locationJSON);
     	    	
+    	    	Log.i("JSON", locationJSON);
+    	    	
     	    	String responseStr = apiConnection(String.format(format, userName, accessToken, base64LocationString));
     	    	
     	    	if(responseStr != null){
diff -EwbNur bonjour-orig/app/src/edu/purdue/cs/hineighbor/HomeActivity.java bonjour-fixed/app/src/edu/purdue/cs/hineighbor/HomeActivity.java
--- bonjour-orig/app/src/edu/purdue/cs/hineighbor/HomeActivity.java	2014-04-18 18:17:48.000000000 -0400
+++ bonjour-fixed/app/src/edu/purdue/cs/hineighbor/HomeActivity.java	2014-04-25 20:23:55.000000000 -0400
@@ -17,6 +17,7 @@
 import android.graphics.drawable.ColorDrawable;
 import android.support.v4.app.ActionBarDrawerToggle;
 import android.support.v4.widget.DrawerLayout;
+import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
@@ -28,6 +29,10 @@
 
 public class HomeActivity extends Activity {
 
+	private static final String TAG = HomeActivity.class.getSimpleName();
+	
+	private static final String OPTION_SELECTED = "selected";
+
 	//Save a userId
 	private long userId = 0L;
 	private DrawerLayout drawerLayout;
@@ -37,6 +42,8 @@
     private ActionBarDrawerToggle mDrawerToggle;
     private CharSequence activityTitle;
     
+    private int mSelected = -1;
+    
 	SQLHandler sqlhandler = SQLHandler.getInstance(this);
 	
 	@Override
@@ -80,7 +87,19 @@
 		drawerList.setAdapter(drawerAdapter);		
 		
 		drawerLayout.setDrawerListener(drawerToggle);
+		
 		this.showWelcome();
+		
+		if (savedInstanceState != null && savedInstanceState.containsKey(OPTION_SELECTED)) {
+			mSelected = savedInstanceState.getInt(OPTION_SELECTED);
+			Log.d(TAG, "mSelected (restored): " + mSelected);
+			
+			if (mSelected != -1) {
+				selectItem(mSelected);
+			}
+		}
+		
+		Log.d(TAG, "onCreate finish.");
 	}
 
 	/**
@@ -142,6 +161,13 @@
 	    }
 	}
 
+	@Override
+	protected void onSaveInstanceState(Bundle outState) {
+		outState.putInt(OPTION_SELECTED, mSelected);
+		
+		super.onSaveInstanceState(outState);
+	}
+
 	private class DrawerItemClickListener implements ListView.OnItemClickListener {
 	    @Override
 	    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
@@ -155,6 +181,9 @@
 	private void selectItem(int position) {
 	    // Create a new fragment
 		Fragment fragment = null;
+		mSelected = position;
+		
+		Log.d(TAG, "mSelected (selectItem): " + mSelected);
 		switch(position){
 		//Home
 		case 0:
diff -EwbNur bonjour-orig/app/src/edu/purdue/cs/hineighbor/LoginActivity.java bonjour-fixed/app/src/edu/purdue/cs/hineighbor/LoginActivity.java
--- bonjour-orig/app/src/edu/purdue/cs/hineighbor/LoginActivity.java	2014-04-18 17:37:04.000000000 -0400
+++ bonjour-fixed/app/src/edu/purdue/cs/hineighbor/LoginActivity.java	2014-04-25 20:23:55.000000000 -0400
@@ -168,7 +168,7 @@
 			focusView = mPasswordView;
 			cancel = true;
 
-		} else if (mPassword.length() < 4) {
+		} else if (mPassword.length() < 6) {
 			mPasswordView.setError(getString(R.string.error_invalid_password));
 			focusView = mPasswordView;
 			cancel = true;
diff -EwbNur bonjour-orig/app/src/edu/purdue/cs/hineighbor/MatchingsFragment.java bonjour-fixed/app/src/edu/purdue/cs/hineighbor/MatchingsFragment.java
--- bonjour-orig/app/src/edu/purdue/cs/hineighbor/MatchingsFragment.java	2014-04-18 17:36:30.000000000 -0400
+++ bonjour-fixed/app/src/edu/purdue/cs/hineighbor/MatchingsFragment.java	2014-04-25 20:23:55.000000000 -0400
@@ -209,7 +209,18 @@
 			if(bundleList == null){
 				Toast.makeText(MatchingsFragment.this.getActivity(), "Matching results retrieve failed", Toast.LENGTH_SHORT).show();
 			}else{
+				final int MATCHINGLIMIT = 3;
+				if (bundleList.size() < MATCHINGLIMIT) {
 				matchingUserAdapter = new MatchingUserAdapter(getActivity(), android.R.id.list, bundleList );
+				}
+				else {
+					ArrayList<Bundle> tempList = new ArrayList<Bundle>();
+					for (int i = 0; i < MATCHINGLIMIT; i++) {
+						tempList.add(bundleList.get(i));
+					}
+					matchingUserAdapter = new MatchingUserAdapter(getActivity(), android.R.id.list, tempList );
+				}
+				
 				matchList.setAdapter(matchingUserAdapter);
 			}
 		}
diff -EwbNur bonjour-orig/app/src/edu/purdue/cs/hineighbor/SQLHandler.java bonjour-fixed/app/src/edu/purdue/cs/hineighbor/SQLHandler.java
--- bonjour-orig/app/src/edu/purdue/cs/hineighbor/SQLHandler.java	2014-04-19 00:10:58.000000000 -0400
+++ bonjour-fixed/app/src/edu/purdue/cs/hineighbor/SQLHandler.java	2014-04-25 20:23:55.000000000 -0400
@@ -212,7 +212,8 @@
 		if(userName == null || userAccessToken == null){
 			return false;
 		}
-		String getUserQuery = "SELECT " + USER_ID + " FROM " + USER_TABLE_NAME + " WHERE " + USER_NAME + " = " + userName;
+		String getUserQuery = "SELECT " + USER_ID + " FROM " + USER_TABLE_NAME
+				+ " WHERE " + USER_NAME + " = \"" + userName + "\"";
 	    SQLiteDatabase db = this.getReadableDatabase();
         Cursor cursor = db.rawQuery(getUserQuery, null);
         int count = cursor.getCount();
@@ -243,7 +244,7 @@
 	 * @param userAccessToken
 	 * @return true or false
 	 */
-	public boolean setUserAccessToken(int userId, String userAccessToken){
+	public boolean setUserAccessToken(long userId, String userAccessToken){
 		if(userId <= 0L || userAccessToken == null){
 			return false;
 		}
@@ -334,7 +335,7 @@
     
 
 	public long addFriend(Bundle bundle){
-
+		if(bundle!=null){
 		SQLiteDatabase db = this.getReadableDatabase();
 		
 		ContentValues values = new ContentValues();
@@ -348,6 +349,8 @@
 
 		return rowid;
 	}
+		return -1L;
+	}
 	
 
 
diff -EwbNur bonjour-orig/app/src/edu/purdue/cs/hineighbor/SignupDetailsFragment.java bonjour-fixed/app/src/edu/purdue/cs/hineighbor/SignupDetailsFragment.java
--- bonjour-orig/app/src/edu/purdue/cs/hineighbor/SignupDetailsFragment.java	2014-04-19 00:11:44.000000000 -0400
+++ bonjour-fixed/app/src/edu/purdue/cs/hineighbor/SignupDetailsFragment.java	2014-04-25 20:23:55.000000000 -0400
@@ -7,6 +7,7 @@
 
 import android.app.Fragment;
 import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
 import android.graphics.drawable.BitmapDrawable;
 import android.os.AsyncTask;
 import android.os.Bundle;
@@ -45,7 +46,8 @@
 	String confirmPassword;
 	boolean gender;
 	int age;
-	Bitmap userIconBitmap;
+	String hobby;
+	String userIconPath;
 	HashMap<String, String> securityHashMap;
 	ArrayAdapter<String> dataAdapter;
 	ArrayList<String> questionList;
@@ -96,6 +98,53 @@
 				return;
 			}
 			
+			if (password == null || (password.length() < 6 || password.length() > 32)) {
+				viewPager.setCurrentItem(0);
+				EditText passwordEdit = (EditText) basicFragment.getView().findViewById(R.id.signup_password);
+				passwordEdit.setError("Invalid password");
+				passwordEdit.requestFocus();
+				return;
+			}
+			// FELIPE CANTAGALLI - FIX WHITESPACE ON PASSWORD 
+			if (password.contains(" ")) {
+					viewPager.setCurrentItem(0);
+					EditText passwordEdit = (EditText) basicFragment.getView().findViewById(R.id.signup_password);
+					passwordEdit.setError("Invalid password");
+					passwordEdit.requestFocus();
+					return;
+			}
+			
+			// FELIPE CANTAGALLI - FIX - BUG 18 OF OUR BLACKBOX TESTING.
+						//Check if the top level domain is at least 3 characters.
+						String[] spliEmail = email.split("@");
+						String[] splitDomain = spliEmail[1].split("\\.");
+						
+						if(splitDomain.length < 2){
+							viewPager.setCurrentItem(0);
+							EditText emailEdit = (EditText)basicFragment.getView().findViewById(R.id.signup_email);
+							emailEdit.setError("Invalid Email Address");
+							emailEdit.requestFocus();
+							return;
+						}
+						else if (splitDomain[splitDomain.length-1].length() > 3){
+							viewPager.setCurrentItem(0);
+							EditText emailEdit = (EditText)basicFragment.getView().findViewById(R.id.signup_email);
+							emailEdit.setError("Invalid Email Address");
+							emailEdit.requestFocus();
+							return;
+						}
+						else{
+							for(int i = 0; i < splitDomain.length; i++){
+								if(!splitDomain[i].matches("[a-zA-Z_]*")){
+									viewPager.setCurrentItem(0);
+									EditText emailEdit = (EditText)basicFragment.getView().findViewById(R.id.signup_email);
+									emailEdit.setError("Invalid Email Address");
+									emailEdit.requestFocus();
+									return;
+								}
+							}
+						}
+						// FINAL OF FELIPE CANTAGALLI FIX
 		
 		if(!uploadFragment.isIconSet()){
 			viewPager.setCurrentItem(1);
@@ -103,13 +152,14 @@
 			return;
 		}
 		
-		ImageView userIcon = (ImageView) uploadFragment.getView().findViewById(R.id.signup_userIcon);
-		
-		userIconBitmap = ((BitmapDrawable)userIcon.getDrawable()).getBitmap();
+//		ImageView userIcon = (ImageView) uploadFragment.getView().findViewById(R.id.signup_userIcon);
+//		userIconBitmap = ((BitmapDrawable)userIcon.getDrawable()).getBitmap();
 
+		userIconPath = uploadFragment.getUploadFilePath();
 	
 		
-		if(hobbyText.getText().toString().equals("")){
+		hobby = hobbyText.getText().toString();
+		if(hobby.equals("")){
 			hobbyText.setError("Invalid Hobby");
 			hobbyText.requestFocus();
 			return;
@@ -123,7 +173,25 @@
 			gender = true;
 		}
 		
-		age = Integer.parseInt(ageEdit.getText().toString());
+		String ageString = ageEdit.getText().toString();
+		try {
+			age = Integer.parseInt(ageString);
+			if (age < 13 || age > 100) {
+				ageEdit.setError("Age must be between 13 and 100");
+				ageEdit.requestFocus();
+				return;
+			}
+		} catch (NumberFormatException e) {
+			ageEdit.setError("Invalid Age");
+			ageEdit.requestFocus();
+			return;
+		}
+		
+		if (securityAnswerText.getText().toString().equals("")) {
+			securityAnswerText.setError("Must answer security question");
+			securityAnswerText.requestFocus();
+			return;
+		}
 		
 		mAuthTask = new UserRegisterTask();
 		mAuthTask.execute((Void) null);
@@ -165,7 +233,7 @@
 			// TODO: attempt authentication against a network service.
 			String selectedNo = null;
 			
-			Long userId = APIHandler.register(SignupDetailsFragment.this.getActivity(), SignupDetailsFragment.this.email, password, confirmPassword, gender, age, userIconBitmap);
+			Long userId = APIHandler.register(SignupDetailsFragment.this.getActivity(), SignupDetailsFragment.this.email, password, confirmPassword, gender, age, userIconPath, hobby);
 			
 			if(userId == -1){
 				return userId;
diff -EwbNur bonjour-orig/app/src/edu/purdue/cs/hineighbor/SignupUploadFragment.java bonjour-fixed/app/src/edu/purdue/cs/hineighbor/SignupUploadFragment.java
--- bonjour-orig/app/src/edu/purdue/cs/hineighbor/SignupUploadFragment.java	2014-02-06 23:52:32.000000000 -0500
+++ bonjour-fixed/app/src/edu/purdue/cs/hineighbor/SignupUploadFragment.java	2014-04-25 20:23:55.000000000 -0400
@@ -16,6 +16,7 @@
 import android.view.ViewGroup;
 import android.widget.Button;
 import android.widget.ImageView;
+import android.widget.Toast;
 /**
  * Signup activity for upload fragment
  * @author Yudong Yang
@@ -29,6 +30,8 @@
 	private Button pickImageButton;
 	private ImageView userIconView;
 	
+	private String mUploadFilePath = null;
+	
 	@Override
 	public View onCreateView(LayoutInflater inflater, ViewGroup container,
 			Bundle savedInstanceState) {
@@ -52,6 +55,10 @@
 		return iconSetFlag;
 	}
 	
+	protected String getUploadFilePath() {
+		return mUploadFilePath;
+	}
+	
 	public void onActivityResult(int requestCode, int resultCode, 
 		       Intent imageReturnedIntent) {
 		    super.onActivityResult(requestCode, resultCode, imageReturnedIntent); 
@@ -70,12 +77,21 @@
 		            String filePath = cursor.getString(columnIndex);
 		            cursor.close();
 
+		            mUploadFilePath = filePath;
 		            
 		            Bitmap selectedImageBitmap = BitmapFactory.decodeFile(filePath);
+		            if (selectedImageBitmap.getWidth() > 4096 || selectedImageBitmap.getHeight() > 4096) {
+		            	Toast.makeText(getActivity(), "Image is too large (4096x4096 limit)", Toast.LENGTH_SHORT).show();
+		            }
+		            else {
 		            userIconView.setImageBitmap(selectedImageBitmap);
 		            iconSetFlag = true;
 		        }
 		    }
+		        else {
+		        	
+		        }
+		    }
 		}
 	
 }
diff -EwbNur bonjour-orig/app/src/edu/purdue/cs/hineighbor/UserProfileFragment.java bonjour-fixed/app/src/edu/purdue/cs/hineighbor/UserProfileFragment.java
--- bonjour-orig/app/src/edu/purdue/cs/hineighbor/UserProfileFragment.java	2014-04-18 18:20:12.000000000 -0400
+++ bonjour-fixed/app/src/edu/purdue/cs/hineighbor/UserProfileFragment.java	2014-04-25 20:23:55.000000000 -0400
@@ -2,6 +2,7 @@
 
 import java.io.InputStream;
 
+import android.app.Activity;
 import android.app.Fragment;
 import android.content.Intent;
 import android.graphics.Bitmap;
@@ -32,6 +33,16 @@
 	private TextView phoneText;
 	private Button editProfileBtn;
 	private long userId = 0L;
+	
+	private Activity mParentActivity;
+	
+	@Override
+	public void onAttach(Activity activity) {
+		super.onAttach(activity);
+		
+		mParentActivity = activity;
+	}
+	
 	@Override
 	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
 		View rootView = inflater.inflate(R.layout.fragment_user_profile, container, false);
@@ -61,6 +72,7 @@
 			}
 		}	
 	}
+	
 	 private class DownloadImageTask extends AsyncTask<String, Void, Bitmap> {
 	    	ImageView userAvatar;
 	    	
@@ -89,7 +101,8 @@
 		protected Bundle doInBackground(String... userName) {
 			// TODO Auto-generated method stub
 			Bundle userProfileBundle = null;
-				if(APIHandler.isNetworkAvaliable(UserProfileFragment.this.getActivity())){
+//				if(APIHandler.isNetworkAvaliable(UserProfileFragment.this.getActivity())){
+				if(APIHandler.isNetworkAvaliable(mParentActivity)){
 					userProfileBundle = APIHandler.getUserProfile(userName[0]);	
 					return userProfileBundle;
 				}
diff -EwbNur bonjour-orig/server/include/class.Core.php bonjour-fixed/server/include/class.Core.php
--- bonjour-orig/server/include/class.Core.php	2014-04-18 16:53:22.000000000 -0400
+++ bonjour-fixed/server/include/class.Core.php	2014-04-25 20:23:55.000000000 -0400
@@ -116,7 +116,7 @@
 	
 	public function isValidPassword($str){
 		$len = strlen($str);
-		if ($len >= 6 and $len <= 33) return true;
+		if ($len >= 6 and $len <= 32) return true; // it should allow just 32 characters
 		return false;
 	}
 	
@@ -132,8 +132,16 @@
 	
 	public function isValidDate($str){
 		$f = explode("-", $str);	//YYYY-mm-dd
+		if(count($f) == 3){
 		return checkdate($f[1], $f[2], $f[0]);
 	}
+		else{
+			$f[1] = "-100";
+			$f[2] = "13";
+			$f[0] = "40";
+			return checkdate($f[1], $f[2], $f[0]); // ! // a bug here
+		}
+	}
 	
 	// whether the email can be sent successfully
 	// depends on the server configuration.
diff -EwbNur bonjour-orig/server/include/class.Database.php bonjour-fixed/server/include/class.Database.php
--- bonjour-orig/server/include/class.Database.php	2014-04-18 16:14:46.000000000 -0400
+++ bonjour-fixed/server/include/class.Database.php	2014-04-25 20:23:55.000000000 -0400
@@ -18,7 +18,6 @@
 	
 	public function connect(){
 		if ($this->db) return;
-		$this->db = new mysqli($this->dbParams["host"], $this->dbParams["username"], $this->dbParams["password"], $this->dbParams["database"]);
 		if (!$this->db)
 			die("Connect failed: %s\n" + mysqli_connect_error());
 	}
diff -EwbNur bonjour-orig/server/include/class.User.php bonjour-fixed/server/include/class.User.php
--- bonjour-orig/server/include/class.User.php	2014-04-18 17:05:47.000000000 -0400
+++ bonjour-fixed/server/include/class.User.php	2014-04-25 20:23:55.000000000 -0400
@@ -100,9 +100,9 @@
 			throw new RegisterException("Empty Username.");
 		} elseif (empty($password) || empty($repeatpass)) {
 			throw new RegisterException("Empty Password.");
-		} elseif ($password !== $repeatpass) {
+		} elseif ($password !== $repeatpass) { // wrong not equal citatiom - fixed
 			throw new RegisterException("Password and password repeat are not the same.");
-		} elseif (strlen($password) < 6) {
+		} elseif (strlen($password) < 6 && strlen($password) > 32) { // it does not check for max password length 
 			throw new RegisterException("Password has a minimum length of 6 characters.");
 		} elseif (strlen($username) > 20 || strlen($username) < 4) {
 			throw new RegisterException("Username cannot be shorter than 4 or longer than 20 characters.");
@@ -293,6 +293,7 @@
 	public function getMatchings($json){
 		$longitude = $json["mLongitude"];
 		$latitude = $json["mLatitude"];
+		$distance = $json["distance"];
 		
 		$this->db->updateQuery("UPDATE users SET user_geoLatitude=\"" . $latitude . "\", user_geoLongitude=\"" . $longitude . "\" WHERE user_email=\"" . $this->logged_in_user . "\" OR user_name=\"" . $this->logged_in_user . "\" LIMIT 1;");
 		
@@ -302,7 +303,7 @@
 				"+ sin(radians(" . $latitude . ")) ".
 				"* sin(radians(user_geoLatitude)))) AS distance FROM users " .
 				" WHERE user_name !=\"" . $this->logged_in_user . "\" AND user_email !=\"" . $this->logged_in_user . "\"" .
-				";"; // some conditions missing :)
+				" HAVING distance <= " . $distance . " ORDER BY distance LIMIT 0, 20;"; // not missing anymore :)
 		$query = $this->db->selectQuery($sql);
 		
 		$result = array();
diff -EwbNur bonjour-orig/server/index.php bonjour-fixed/server/index.php
--- bonjour-orig/server/index.php	2014-04-04 22:49:18.000000000 -0400
+++ bonjour-fixed/server/index.php	2014-04-25 20:31:04.000000000 -0400
@@ -1 +0,0 @@
- 
\ No newline at end of file
